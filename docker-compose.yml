services:
  backend:
    build:
      context: ./docker
      dockerfile: backend.Dockerfile
    ports:
      - '9000:9000'
    volumes:
      - ./backend:/go/src/myapp
    command: "air"
    depends_on:
      db:
        condition: service_healthy
    environment:
      TZ: Asia/Tokyo
  frontend:
    image: node:20.12.2
    working_dir: /home/node/myapp
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/home/node/myapp
      - /home/node/myapp/node_modules
    command: "bash -c 'npm i && npm run dev'"
    environment:
      TZ: Asia/Tokyo
    init: true
  storybook:
    image: node:20.12.2
    working_dir: /home/node/myapp
    ports:
      - '6001:6001'
    volumes:
      - ./frontend:/home/node/myapp
      - /home/node/myapp/node_modules
    command: "bash -c 'npm i && npm run storybook'"
    environment:
      TZ: Asia/Tokyo
    init: true
  db:
    image: mysql:8
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - '3306:3306'
    volumes:
      - mysql-local:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/sql:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=training
      - TZ=Asia/Tokyo
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root
      interval: 5s
      timeout: 10s
      retries: 6
      start_period: 5s
  apidoc:
    image: swaggerapi/swagger-ui
    ports:
      - '8000:8080'
    volumes:
      - ./api/api.yml:/openapi.yml
    environment:
      SWAGGER_JSON: /openapi.yml
  apidoc2:
    build:
      context: ./
      dockerfile: ./docker/apidoc-element.Dockerfile
    ports:
      - '8010:80'
  apimock:
    image: stoplight/prism:5
    ports:
      - '8080:4010'
    volumes:
      - ./api/api.yml:/openapi.yml
    command: 'mock -d -h 0.0.0.0 /openapi.yml'
volumes:
  mysql-local:
