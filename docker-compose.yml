services:
  backend:
    build:
      context: ./docker
      dockerfile: backend.Dockerfile
    ports:
      - '9000:9000'
    volumes:
      - ./backend/timeline:/go/src/myapp
    command: "air"
    depends_on:
      db:
        condition: service_healthy
    environment:
      TZ: Asia/Tokyo
  backend-user:
    image: gradle:8.8.0-jdk21-jammy
    command: "gradle run"
    ports:
      - '9090:9090'
    volumes:
      - ./backend/user:/home/gradle
    depends_on:
      db:
        condition: service_healthy
    environment:
      TZ: Asia/Tokyo
      JWT_SECRET: ultra_super_ultimate_secret
      DB_URL: "jdbc:mysql://db:3306/training"
  frontend:
    image: node:20.12.2
    working_dir: /home/node/myapp
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/home/node/myapp
      - /home/node/myapp/node_modules
    command: "bash -c 'npm i && npm run dev'"
    environment:
      TZ: Asia/Tokyo
    init: true
  storybook:
    image: node:20.12.2
    working_dir: /home/node/myapp
    ports:
      - '6001:6001'
    volumes:
      - ./frontend:/home/node/myapp
      - /home/node/myapp/node_modules
    command: "bash -c 'npm i && npm run storybook'"
    environment:
      TZ: Asia/Tokyo
    init: true
  db:
    build:
      context: ./docker
      dockerfile: mysql.Dockerfile
    volumes:
      - mysql-volume:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/sql:/docker-entrypoint-initdb.d
    ports:
      - '3306:3306'
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=training
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root
      interval: 5s
      timeout: 30s
      retries: 10
      start_period: 5s
  apidoc:
    image: swaggerapi/swagger-ui
    ports:
      - '8000:8080'
    volumes:
      - ./api/api.yaml:/openapi.yaml
    environment:
      SWAGGER_JSON: /openapi.yaml
  apidoc2:
    build:
      context: ./
      dockerfile: ./docker/apidoc-element.Dockerfile
    ports:
      - '8010:80'
  apimock:
    image: stoplight/prism:5
    ports:
      - '8080:4010'
    volumes:
      - ./api/api.yaml:/openapi.yaml
    command: 'mock -d -h 0.0.0.0 /openapi.yaml'
volumes:
  mysql-volume: